#------Experiments to test (separated with commas)-----

data.experiments=['euclid_spectroscopic']

#------ Parameter list -------

# data.parameters[class name] = [mean, min, max, 1-sigma, scale, role]
# - if min max irrelevant, put to -1 or None (if you want a boundary of -1, use -1.0)
# - if fixed, put 1-sigma to 0
# - if scale irrelevant, put to 1, otherwise to the appropriate factor
# - role is either 'cosmo', 'nuisance' or 'derived'


# Cosmological parameter list
data.parameters['Omega_b']         = [0.0491989,     0.005, 1,  0.000491989,  1, 'cosmo']
data.parameters['h']               = [0.6737,        0.1, 1.5,  0.006737,  1, 'cosmo']
data.parameters['n_s']             = [0.96605,       0.8, 1.2,  0.0096605,  1, 'cosmo']
data.parameters['sigma8']          = [0.81,          0.7, 0.9,  0.0081,  1, 'cosmo']
#data.parameters['N_eff_camb']      = [3.044,         0.,    6,  0.03044,  1, 'cosmo']
#data.parameters['m_nu_camb']       = [0.06,          0.,    1,    0.003,  1, 'cosmo']
#data.parameters['Omega_m_camb']    = [0.3145714273,  0.005, 1,  0.003145714273,  1, 'cosmo']
data.parameters['Omega_m']         = [0.3145714273,  0.005, 1,  0.003145714273,  1, 'cosmo']

# Nuisance parameter list
# Fiducial values are given by b=sqrt(1+\bar{z}) in each bin
# Arbitrary limits for faster convergence in MCMC
data.parameters['P_shot0']	= [0,  None, None,   41.766177184468276,  1,  'nuisance']
data.parameters['P_shot1']	= [0,  None, None,   41.609599700266074,  1,  'nuisance']
data.parameters['P_shot2']	= [0,  None, None,   43.70279247913095,  1,  'nuisance']
data.parameters['P_shot3']	= [0,  None, None,   41.55924754127148,  1,  'nuisance']
data.parameters['lnbsigma8_0']	= [-0.3255807310587479,  None, None,   0.0016113608080343903,  1,  'nuisance']
data.parameters['lnbsigma8_1']	= [-0.3160462157381254,  None, None,   0.0015613208414001507,  1,  'nuisance']
data.parameters['lnbsigma8_2']	= [-0.3116576878035215,  None, None,   0.001600760768241817,  1,  'nuisance']
data.parameters['lnbsigma8_3']	= [-0.320278300814655,  None, None,   0.0014955974586440062,  1,  'nuisance']
#data.parameters['lnb_0']	= [0.3794498946000032,  None, None,   0.0037945,  1,  'nuisance']
#data.parameters['lnb_1']	= [0.4738057046878618,  None, None,   0.0047381,  1,  'nuisance']
#data.parameters['lnb_2']	= [0.5576017611443639,  None, None,   0.0055760,  1,  'nuisance']
#data.parameters['lnb_3']	= [0.6412568658859814,  None, None,   0.0064126,  1,  'nuisance']
#data.parameters['sigma_v']	= [4.8685724918833530594,  None, None,   0.04868572492,  1,  'nuisance']
#data.parameters['sigma_p']	= [4.8685724918833530594,  None, None,   0.04868572492,  1,  'nuisance']


# Fixed parameter list
#data.cosmo_arguments['T_ncdm'] = 2.7255
#data.cosmo_arguments['N_ncdm'] = 1
data.cosmo_arguments['YHe'] = 0.2454006
data.cosmo_arguments['reio_parametrization'] = 'reio_none'

# precision parameters
data.cosmo_arguments['non linear'] = 'none'
data.cosmo_arguments['k_per_decade_for_pk'] = 30.
data.cosmo_arguments['tol_shooting_deltax_rel'] = 1.e-8

#------ Mcmc parameters ----
# Number of steps taken, by default (overwritten by the -N command)
data.N=10
# Number of accepted steps before writing to file the chain. Larger means less
# access to disc, but this is not so much time consuming.
data.write_step=5
