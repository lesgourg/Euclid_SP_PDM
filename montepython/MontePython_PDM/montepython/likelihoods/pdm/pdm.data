# Euclid likelihood
# Cross-correlation of photometric probes

# Based on an earlier euclid_lensing likelihood
# by Sprenger et al. 1801.08331

# Developed by Maike Doerenkamp, Lena Rathmann, Julien Lesgourgues, Justus Schwagereit, Sefa Pamuk
# Following the validation recipe of
# Euclid Collaboration et al. 1910.09237


# data directory and fiducial file
pdm.data_directory   = data.path['data']
pdm.fiducial_file_path = "euclid_3x2_pess_BCemu_WL.npz"


# evaluated probes
pdm.probe_WL = True
pdm.probe_GC = True


# evaluated l-values
pdm.lmin = 10
# because the Limber approximation only holds above lmin=10!
# lmax_WL >= lmax_GC typically
# cross-correlation is done until lmax_XC = min(lmax_WL, lmax_GC)
# optimistic case:
# pdm.lmax_WL=5000
# pdm.lmax_GC=3000
# pessimistic case:
pdm.lmax_WL=1500
pdm.lmax_GC=750


# Evaluted k-values in either h/Mpc or 1/Mpc
# pdm.kmin_in_h_by_Mpc = 0.001
# pdm.kmax_in_h_by_Mpc = 50.0
pdm.kmin_in_inv_Mpc = 0.001
pdm.kmax_in_inv_Mpc = 10.0


# Survey specifications
# Covered redshift bins
# the last value equals zmax
# this array should hold one more value than the number of bins in your survey (default: 10 bins, 11 z edge values)
pdm.z_bin_edges = [0.001, 0.418, 0.560, 0.678, 0.789, 0.900, 1.019, 1.155, 1.324, 1.576, 2.5]
# sky coverage
pdm.fsky  = 0.3636
# number of galaxies per square arcminutes
pdm.gal_per_sqarcmn = 30.0


# Computational precision
# number of discrete z values in integrations
pdm.nzmax = 200
# number of discrete l values
pdm.lbin = 100
# noise computation
pdm.rms_shear = 0.30
# note even if False, halofit will be used if the .param
# file or any other likelihood specifies halofit

# massive neutrinos
pdm.massive_neutrinos = True
# use scale-independent growth factor f (like in IST:Fisher)
# or scale-dependent one (like in f(R) or neutrino papers)
pdm.scale_dependent_f = True
# Bias model. Chose between binned and binned_constant
pdm.bias_model = 'binned'


# BCemu parameters
# BCemu k and z bins at which exact values will be computed
pdm.BCemu_k_bins = 200
pdm.BCemu_z_bins = 50
# the number of k bins does not significantly impact performance,
# while the number of z bins does


# print chi2 and elapsed time at every call
pdm.verbose = True
# print time taken for each of the individual steps
pdm.print_individual_times = False
