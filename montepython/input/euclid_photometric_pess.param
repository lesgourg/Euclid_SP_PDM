#------Experiments to test (separated with commas)-----

data.experiments=['euclid_photometric']

#------ Parameter list -------

# data.parameters[class name] = [mean, min, max, 1-sigma, scale, role]
# - if min max irrelevant, put to -1 or None (if you want a boundary of -1, use -1.0)
# - if fixed, put 1-sigma to 0
# - if scale irrelevant, put to 1, otherwise to the appropriate factor
# - role is either 'cosmo', 'nuisance' or 'derived'


# Cosmological parameter list
data.parameters['Omega_b']         = [0.0491989,     0.005, 1,  0.002,    1, 'cosmo']
data.parameters['h']               = [0.6737,        0.1, 1.5,  0.01,     1, 'cosmo']
data.parameters['n_s']             = [0.96605,       0.8, 1.2,  0.007,     1, 'cosmo']
data.parameters['sigma8']          = [0.81,          0.7, 0.9,  0.001,    1, 'cosmo']
#data.parameters['N_eff_camb']      = [3.044,         0.,    6,  0.3,      1, 'cosmo']
#data.parameters['m_nu_camb']       = [0.06,          0.,    1,  0.04,     1, 'cosmo']
#data.parameters['Omega_m_camb']    = [0.3145714273,  0.005, 1,  0.001,   1, 'cosmo']
data.parameters['Omega_m']          = [0.3145714273,  0.005, 1,  0.001,   1, 'cosmo']

# Nuisance parameter list
# Fiducial values are given by b=sqrt(1+\bar{z}) in each bin
# Arbitrary limits for faster convergence in MCMC
data.parameters['bias_1']	   = [1.0998,  None, None,   0.010998,  1,  'nuisance']
data.parameters['bias_2']	   = [1.2202,  None, None,   0.012202,  1,  'nuisance']
data.parameters['bias_3']	   = [1.2724,  None, None,   0.012724,  1,  'nuisance']
data.parameters['bias_4']	   = [1.3166,  None, None,   0.013166,  1,  'nuisance']
data.parameters['bias_5']	   = [1.3581,  None, None,   0.013581,  1,  'nuisance']
data.parameters['bias_6']	   = [1.3998,  None, None,   0.013998,  1,  'nuisance']
data.parameters['bias_7']	   = [1.4446,  None, None,   0.014446,  1,  'nuisance']
data.parameters['bias_8']	   = [1.4965,  None, None,   0.014965,  1,  'nuisance']
data.parameters['bias_9']	   = [1.5652,  None, None,   0.015652,  1,  'nuisance']
data.parameters['bias_10']	   = [1.743,  None, None,   0.01743,  1,  'nuisance']

# limits of 3sigma (according to IST-opt), except a_IA!>0
# or fix to fiducial value by setting sigma to 0
data.parameters['aIA']             = [1.72,      0,     12.1,  0.0172,      1, 'nuisance']
data.parameters['etaIA']           = [-0.41,     -7.0,  6.17,  0.1,      1, 'nuisance']
data.parameters['betaIA']          = [2.17,      0.63,   5.0,   0.,      1, 'nuisance']

# Fixed parameter list
#data.cosmo_arguments['T_ncdm'] = 2.7255
#data.cosmo_arguments['N_ncdm'] = 1
data.cosmo_arguments['YHe'] = 0.2454006
data.cosmo_arguments['reio_parametrization'] = 'reio_none'

# precision parameters
data.cosmo_arguments['non linear'] = 'none'
data.cosmo_arguments['k_per_decade_for_pk'] = 30.
data.cosmo_arguments['tol_shooting_deltax_rel'] = 1.e-8

#------ Mcmc parameters ----
# Number of steps taken, by default (overwritten by the -N command)
data.N=10
# Number of accepted steps before writing to file the chain. Larger means less
# access to disc, but this is not so much time consuming.
data.write_step=5
